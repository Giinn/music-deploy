{"version":3,"sources":["components/Player.js","components/Song.js","data.js","components/LibrarySong.js","components/Library.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Player","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","songs","currentSong","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnimation","transform","animationPercentage","className","currentTime","style","background","color","type","min","max","duration","value","onChange","event","target","icon","faAngleLeft","size","onClick","faPause","faPlay","pause","faAngleRight","Song","src","cover","alt","name","artist","chillHop","audio","uuidv4","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","App","useState","data","useRef","timeUpdateHandler","roundedCurrent","round","roundedDuration","onEndHandler","onTimeUpdate","ref","onLoadedMetadata","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9438d2ba.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Player = ({ isPlaying, setIsPlaying, audioRef, songInfo, setSongInfo, songs, currentSong, setCurrentSong, setSongs }) => {\r\n\r\n    const activeLibraryHandler = (nextPrev) => {\r\n        const newSongs = songs.map((song) => {\r\n            if (song.id === nextPrev.id) {\r\n                return {\r\n                    ...song,\r\n                    active: true\r\n                }\r\n            } else {\r\n                return {\r\n                    ...song,\r\n                    active: false\r\n                }\r\n            }\r\n        });\r\n\r\n        setSongs(newSongs);\r\n    }\r\n\r\n    const playSongHandler = () => {\r\n        if (isPlaying) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        } else {\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    }\r\n\r\n    const playPauseIconHandler = () => {\r\n        return isPlaying ? faPause : faPlay;\r\n    }\r\n\r\n    const getTime = (time) => {\r\n        return (\r\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        );\r\n    }\r\n\r\n    const dragHandler = (event) => {\r\n        audioRef.current.currentTime = event.target.value;\r\n        setSongInfo({ ...songInfo, currentTime: event.target.value });\r\n    }\r\n\r\n    const skipTrackHandler = async (direction) => {\r\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n\r\n        if (direction === 'skip-forward') {\r\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n        }\r\n\r\n        if (direction === 'skip-back') {\r\n            if ((currentIndex - 1) % songs.length === -1) {\r\n                await setCurrentSong(songs[songs.length - 1]);\r\n                activeLibraryHandler(songs[songs.length - 1]);\r\n                if (isPlaying) audioRef.current.play();\r\n                return;\r\n            }\r\n            await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n        }\r\n        if (isPlaying) audioRef.current.play();\r\n    }\r\n\r\n    // styles for track slider\r\n    const trackAnimation = {\r\n        transform: `translateX(${songInfo.animationPercentage}%)`\r\n    }\r\n\r\n    return (\r\n        <div className=\"player-container\" >\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n                <div className=\"track\" style={{ background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})` }} >\r\n                    <input\r\n                        type=\"range\"\r\n                        min={0}\r\n                        max={songInfo.duration}\r\n                        value={songInfo.currentTime}\r\n                        onChange={dragHandler}\r\n                    />\r\n                    <div className=\"animate-track\" style={trackAnimation} />\r\n                </div>\r\n                <p>{songInfo.duration ? getTime(songInfo.duration) : '0:00'}</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon\r\n                    className=\"skip-back\"\r\n                    icon={faAngleLeft}\r\n                    size=\"2x\"\r\n                    onClick={() => skipTrackHandler('skip-back')}\r\n                />\r\n                <FontAwesomeIcon\r\n                    className=\"play\"\r\n                    icon={playPauseIconHandler()}\r\n                    size=\"2x\"\r\n                    onClick={playSongHandler}\r\n                />\r\n                <FontAwesomeIcon\r\n                    className=\"skip-forward\"\r\n                    icon={faAngleRight}\r\n                    size=\"2x\"\r\n                    onClick={() => skipTrackHandler('skip-forward')}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;\r\n","import React from 'react';\r\n\r\nconst Song = ({ currentSong }) => {\r\n    return (\r\n        <div className=\"song-container\" >\r\n            <img src={currentSong.cover} alt={currentSong.name} />\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst chillHop = () => {\r\n    return [\r\n        {\r\n            name: \"Beaver Creek\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n            artist: \"Aso, Middle School, Aviino\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n            color: [\"#205950\", \"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: true,\r\n        },\r\n        {\r\n            name: \"Daylight\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n            artist: \"Aiguille\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n            color: [\"#EF8EA9\", \"#ab417f\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Keep Going\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n            artist: \"Swørn\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n            color: [\"#CD607D\", \"#c94043\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Nightfall\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n            artist: \"Aiguille\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n            color: [\"#EF8EA9\", \"#ab417f\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Reflection\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n            artist: \"Swørn\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n            color: [\"#CD607D\", \"#c94043\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Under the City Stars\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n            artist: \"Aso, Middle School, Aviino\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n            color: [\"#205950\", \"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        //ADD MORE HERE\r\n    ];\r\n}\r\n\r\nexport default chillHop;","import React from 'react';\r\n\r\nconst LibrarySong = ({ song, setCurrentSong, audioRef, isPlaying, songs, id, setSongs }) => {\r\n    const songSelectHandler = async () => {\r\n        await setCurrentSong(song);\r\n\r\n        // add Active state for songs\r\n        const newSongs = songs.map((song) => {\r\n            if (song.id === id) {\r\n                return {\r\n                    ...song,\r\n                    active: true\r\n                }\r\n            } else {\r\n                return {\r\n                    ...song,\r\n                    active: false\r\n                }\r\n            }\r\n        });\r\n\r\n        setSongs(newSongs);\r\n\r\n        // check if song is playing\r\n        if (isPlaying) audioRef.current.play();\r\n    }\r\n\r\n    return (\r\n        <div className={`library-song ${song.active ? 'selected' : \"\"}`} onClick={songSelectHandler} >\r\n            <img src={song.cover} alt={song.name} />\r\n            <div className=\"song-description\">\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LibrarySong;\r\n","import React from 'react';\r\nimport LibrarySong from './LibrarySong';\r\n\r\nconst Library = ({ songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus }) => {\r\n    return (\r\n        <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\r\n            <h2>Library</h2>\r\n            <div className=\"library-songs\">\r\n                {songs.map(song => <LibrarySong\r\n                    song={song}\r\n                    setCurrentSong={setCurrentSong}\r\n                    songs={songs}\r\n                    key={song.id}\r\n                    audioRef={audioRef}\r\n                    isPlaying={isPlaying}\r\n                    setSongs={setSongs}\r\n                    id={song.id}\r\n                />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Library;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n    return (\r\n        <nav className=\"nav\">\r\n            <h1>Waves</h1>\r\n            <button onClick={() => { setLibraryStatus(!libraryStatus) }}>\r\n                Library\r\n                <FontAwesomeIcon icon={faMusic} />\r\n            </button>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React, { useState, useRef } from 'react';\r\nimport './styles/app.scss';\r\nimport Player from './components/Player';\r\nimport Song from './components/Song';\r\nimport data from './data';\r\nimport Library from './components/Library';\r\nimport Nav from './components/Nav';\r\n\r\nfunction App() {\r\n    // state\r\n    const [songs, setSongs] = useState(data);\r\n    const [currentSong, setCurrentSong] = useState(songs[0]);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [songInfo, setSongInfo] = useState({\r\n        currentTime: 0,\r\n        duration: 0,\r\n        animationPercentage: 0\r\n    });\r\n    const [libraryStatus, setLibraryStatus] = useState(false);\r\n\r\n    // ref\r\n    const audioRef = useRef(null);\r\n\r\n    const timeUpdateHandler = (event) => {\r\n        const currentTime = event.target.currentTime;\r\n        const duration = event.target.duration;\r\n\r\n        // calculate percentage of the song track\r\n        const roundedCurrent = Math.round(currentTime);\r\n        const roundedDuration = Math.round(duration);\r\n        const animationPercentage = Math.round((roundedCurrent / roundedDuration) * 100);\r\n\r\n        // when name of property in the state is the same as variable you are passing, you don't need to\r\n        // say duration: duration\r\n        // simple duration is enough cause it will know what you mean\r\n        setSongInfo({ ...songInfo, currentTime, duration, animationPercentage });\r\n    }\r\n\r\n    const onEndHandler = async () => {\r\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n\r\n        await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n\r\n        if (isPlaying) {\r\n            audioRef.current.play();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`app ${libraryStatus ? 'library-active' : ''}`}>\r\n            <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\r\n            <Song currentSong={currentSong} />\r\n            <Player\r\n                setSongs={setSongs}\r\n                songs={songs}\r\n                setSongInfo={setSongInfo}\r\n                songInfo={songInfo}\r\n                currentSong={currentSong}\r\n                isPlaying={isPlaying}\r\n                setIsPlaying={setIsPlaying}\r\n                audioRef={audioRef}\r\n                setCurrentSong={setCurrentSong}\r\n            />\r\n            <Library\r\n                libraryStatus={libraryStatus}\r\n                isPlaying={isPlaying}\r\n                setSongs={setSongs}\r\n                songs={songs}\r\n                audioRef={audioRef}\r\n                setCurrentSong={setCurrentSong}\r\n            />\r\n            <audio\r\n                onTimeUpdate={timeUpdateHandler}\r\n                ref={audioRef}\r\n                src={currentSong.audio}\r\n                onLoadedMetadata={timeUpdateHandler}\r\n                onEnded={onEndHandler}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}